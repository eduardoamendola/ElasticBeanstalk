from flask import Flask, render_template, request
from flask.ext.bootstrap import Bootstrap
import ConfigParser, os
import memcache

# EB looks for an 'application' callable by default.
application = Flask(__name__)
bootstrap = Bootstrap(application)

@application.route('/')
def index():
    return render_template('index.html')

@application.route('/<name>')
def user(name):
    return render_template('user.html', name=name)

@application.route('/elasticache', methods=['GET', 'POST'])
def elasticache():
    # Getting server info from config file that was generated by "files" in ebextension
    config = ConfigParser.RawConfigParser()
    config.read('/etc/elasticache.cfg')
    memcache_server = config.get('memcache', 'server')
    memcache_port = config.get('memcache', 'port')
    memcache_endpoint = [ memcache_server + ":" + memcache_port ]
    memcache_key = "mykey"

    # Connecting to memcache server in Elasticache
    elasticache = memcache.Client(memcache_endpoint)

    cache_value = None
    if request.method == 'POST' and 'posted_cache_value' in request.form:
	# Adding the entered value to cache_value variable
        cache_value = request.form['posted_cache_value']
	# Adding cache_value to key called "key" inside the memcache server
	elasticache.set(memcache_key, cache_value)
    
    # Retrieving data from key "mykey"  from Elasticache server
    cached_data = elasticache.get(memcache_key)

    return render_template('elasticache.html', posted_cache_value=cache_value, memcache_endpoint=memcache_endpoint, cached_data=cached_data, memcache_key=memcache_key)

# run the application.
if __name__ == "__main__":
    # Setting debug to True enables debug output. This line should be
    # removed before deploying a production application.
    application.debug = True
    application.run(host='0.0.0.0')
